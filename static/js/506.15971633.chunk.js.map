{"version":3,"file":"static/js/506.15971633.chunk.js","mappings":"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","sources":["redux/constacts/selectors.js","components/ContactForm/ContactForm.module.jsx","components/ContactForm/ContactForm.jsx","components/Filter/Filter.module.jsx","components/Filter/Filter.jsx","components/ContactListItem/ContactListItem.module.jsx","components/ContactListItem/ContactListItem.jsx","components/ContactList/ContactList.module.jsx","components/ContactList/ContactList.jsx","Pages/Contacts/Contacts.module.jsx","components/Modal/Modal.module.jsx","components/Modal/Modal.jsx","Pages/Contacts/Contacts.jsx","components/Section/Section.module.jsx","components/Section/Section.jsx"],"sourcesContent":["export const selectContactsList = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectContactsFilter = state => state.filters;\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const Form = styled.form`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 18px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  margin-top: 24px;\n  padding: 1.063em 1.5em;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import { useSelector, useDispatch } from 'react-redux';\n\nimport PropTypes from 'prop-types';\n\nimport { selectContactsList } from 'redux/constacts/selectors';\nimport { addContact } from 'redux/constacts/operations';\n\nimport { Form, Input, Label, Button, AddUserIcon } from './ContactForm.module';\nimport { Notify } from 'notiflix';\n\nexport const ContactForm = ({ onCloseModal }) => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsList);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    const form = e.target;\n    const formName = e.target.elements.name.value;\n    const formNumber = e.target.elements.number.value;\n    if (contacts.some(({ name }) => name === formName)) {\n      return alert(`${formName} is already in contacts`);\n    }\n\n    if (contacts.some(({ number }) => number === formNumber)) {\n      return alert(`${formNumber} is already in contacts`);\n    }\n\n    dispatch(addContact({ name: formName, number: formNumber.toString() }))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully added to contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n\n    onCloseModal();\n    form.reset();\n  };\n\n  return (\n    <Form onSubmit={handleSubmit} autoComplete=\"off\">\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          placeholder=\"Enter name ...\"\n          value={contacts.name}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          placeholder=\"Enter number ...\"\n          value={contacts.number}\n        />\n      </Label>\n      <Button type=\"submit\">\n        <AddUserIcon />\n        New contact\n      </Button>\n    </Form>\n  );\n};\n\nContactForm.propTypes = {\n  onCloseModal: PropTypes.func.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  font-size: 16px;\n  font-weight: 500;\n`;\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n","import { useDispatch, useSelector } from 'react-redux';\n\nimport { setContactsFilter } from 'redux/constacts/filtersSlice';\nimport { selectContactsFilter } from 'redux/constacts/selectors';\n\nimport { Label, Input } from './Filter.module';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectContactsFilter);\n\n  const handleChangeFilter = ({ currentTarget: { value } }) => {\n    const normalizedValue = value.toLowerCase().trim();\n    dispatch(setContactsFilter(normalizedValue));\n  };\n\n  return (\n    <Label>\n      <Input\n        type=\"text\"\n        name=\"filter\"\n        placeholder=\"Enter contact name\"\n        value={filter}\n        onChange={handleChangeFilter}\n      />\n    </Label>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUser, FaPhoneAlt, FaUserMinus } from 'react-icons/fa';\n\nexport const UserIcon = styled(FaUser)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const PhoneIcon = styled(FaPhoneAlt)`\n  padding: 8px;\n\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n\n  border-radius: 12px;\n\n  background-color: rgba(250, 187, 24, 0.1);\n`;\n\nexport const UserDeletedIcon = styled(FaUserMinus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\n\nexport const ContactItem = styled.li`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  gap: 6px;\n\n  padding: 20px 20px;\n\n  border-radius: 24px;\n  border: 1px solid rgba(0, 0, 0, 0.04);\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n`;\n\nexport const ContactName = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  font-weight: 500;\n`;\n\nexport const ContactNumber = styled.p`\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  margin: 0;\n  /* margin-left: 10px; */\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n\n  padding: 0.563em 1em;\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 8px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import PropTypes from 'prop-types';\n\nimport { useDispatch } from 'react-redux';\n\nimport { deleteContact } from 'redux/constacts/operations';\n\nimport {\n  ContactItem,\n  ContactName,\n  ContactNumber,\n  Button,\n  UserIcon,\n  UserDeletedIcon,\n  PhoneIcon,\n} from './ContactListItem.module';\nimport { Notify } from 'notiflix';\n\nexport const ContactsListItem = ({ id, name, number }) => {\n  const dispatch = useDispatch();\n\n  const handleDeleteContact = userId => {\n    dispatch(deleteContact(userId))\n      .unwrap()\n      .then(originalPromiseResult => {\n        Notify.success(\n          `${originalPromiseResult.name} successfully deleted from contacts`\n        );\n      })\n      .catch(() => {\n        Notify.failure(\"Sorry, something's wrong\");\n      });\n  };\n\n  return (\n    <ContactItem key={id}>\n      <ContactName>\n        <UserIcon />\n        {name}\n      </ContactName>\n      <ContactNumber>\n        <PhoneIcon />\n        {number}\n      </ContactNumber>\n      <Button onClick={() => handleDeleteContact(id)}>\n        <UserDeletedIcon />\n        Delete\n      </Button>\n    </ContactItem>\n  );\n};\n\nContactsListItem.propTypes = {\n  id: PropTypes.string.isRequired,\n  name: PropTypes.string.isRequired,\n  number: PropTypes.string.isRequired,\n};\n","import styled from '@emotion/styled';\n\nexport const ContactsList = styled.ul`\n  display: grid;\n  grid-template-columns: repeat(auto-fill, minmax(200px, 1fr));\n\n  grid-gap: 24px;\n`;\n","import { useSelector } from 'react-redux';\n\nimport {\n  selectContactsFilter,\n  selectContactsList,\n} from 'redux/constacts/selectors';\n\nimport { ContactsListItem } from '../ContactListItem/ContactListItem';\n\nimport { ContactsList } from './ContactList.module';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContactsList);\n  const filter = useSelector(selectContactsFilter);\n  const visibleContacts = [\n    ...contacts.filter(contact => contact.name.toLowerCase().includes(filter)),\n  ];\n\n  return (\n    <ContactsList>\n      {visibleContacts.map(({ name, number, id }) => (\n        <ContactsListItem key={id} id={id} name={name} number={number} />\n      ))}\n    </ContactsList>\n  );\n};\n","import styled from '@emotion/styled';\nimport { FaUserPlus } from 'react-icons/fa';\n\nexport const AddUserIcon = styled(FaUserPlus)`\n  width: 20px;\n  height: 20px;\n\n  fill: #fabb18;\n`;\nexport const ContentPageContainer = styled.div`\n  padding: 38px 48px;\n  height: 100vh;\n\n  border-radius: 32px 32px 0 0;\n  background-color: #f9f9f9;\n`;\nexport const ContactNavWrapper = styled.div`\n  display: flex;\n  align-items: center;\n  margin-bottom: 28px;\n`;\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  margin: 0;\n`;\n\nexport const FilterWrapper = styled.div`\n  display: flex;\n  margin-left: auto;\n`;\n\nexport const Form = styled.form``;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  margin-top: 12px;\n  font-size: 16px;\n  font-weight: 500;\n`;\n\nexport const Input = styled.input`\n  width: 250px;\n  padding: 22px 36px;\n\n  color: #000000;\n  background: #efefef;\n  border-radius: 18px;\n  border-style: none;\n\n  :placeholder {\n    color: #757575;\n  }\n`;\n\nexport const Button = styled.button`\n  font-weight: 700;\n  font-size: 14px;\n\n  display: flex;\n  align-items: center;\n  gap: 14px;\n  width: fit-content;\n\n  padding: 1.063em 1.5em;\n  margin-left: 28px;\n\n  background-color: #000000;\n\n  box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.04);\n  border: 1px solid rgba(250, 187, 24, 0.1);\n  border-radius: 14px;\n\n  cursor: pointer;\n\n  transition: background-color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: color 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: border 250ms cubic-bezier(0.4, 0, 0.2, 1);\n  transition: fill 250ms cubic-bezier(0.4, 0, 0.2, 1);\n\n  :hover,\n  :focus {\n    color: #000000;\n    background-color: rgba(250, 187, 24, 0.1);\n    border: 1px solid #000000;\n    > svg {\n      fill: #000000;\n    }\n  }\n`;\n","import styled from '@emotion/styled';\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  left: 0;\n  width: 100vw;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  background: linear-gradient(138.13deg, #22343c75 25.87%, #1f2e3572 100%);\n  z-index: 1200;\n`;\n\nexport const ModalContent = styled.div`\n  border-radius: 25px;\n  overflow: hidden;\n\n  max-width: calc(100vw - 48px);\n  max-height: calc(100vh - 24px);\n\n  padding-left: 30px;\n  padding-right: 30px;\n  background-color: #f9f9f9;\n`;\n","import PropTypes from 'prop-types';\nimport { useEffect } from 'react';\nimport { ModalContent, Overlay } from './Modal.module';\n\nexport const Modal = ({ children, onCloseModal }) => {\n  useEffect(() => {\n    const handleKeydown = e => {\n      if (e.code === 'Escape') {\n        onCloseModal();\n      }\n    };\n\n    window.addEventListener('keydown', handleKeydown);\n\n    return () => {\n      window.removeEventListener('keydown', handleKeydown);\n    };\n  }, [onCloseModal]);\n\n  const handleBackdropClick = ({ target, currentTarget }) => {\n    if (currentTarget === target) {\n      onCloseModal();\n    }\n  };\n\n  return (\n    <Overlay onClick={handleBackdropClick}>\n      <ModalContent>{children}</ModalContent>\n    </Overlay>\n  );\n};\n\nModal.propTypes = {\n  children: PropTypes.node,\n  onCloseModal: PropTypes.func,\n};\n","import { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { fetchContacts } from 'redux/constacts/operations';\nimport { selectError, selectIsLoading } from 'redux/constacts/selectors';\n\nimport { Section } from '../../components/Section/Section';\nimport { ContactForm } from '../../components/ContactForm/ContactForm';\nimport { Filter } from '../../components/Filter/Filter';\nimport { ContactList } from '../../components/ContactList/ContactList';\nimport {\n  AddUserIcon,\n  Button,\n  ContactNavWrapper,\n  ContentPageContainer,\n  FilterWrapper,\n  Title,\n} from './Contacts.module';\nimport { Modal } from 'components/Modal/Modal';\n\nconst Contacts = () => {\n  const dispatch = useDispatch();\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n  const [isShowModalAddUser, setIsShowModalAddUser] = useState(false);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const handleOpenModal = () => {\n    setIsShowModalAddUser(prev => !prev);\n  };\n\n  return (\n    <ContentPageContainer>\n      <Section>\n        <ContactNavWrapper>\n          <Title>Contacts</Title>\n          <FilterWrapper>\n            <Filter />\n            <Button type=\"button\" onClick={handleOpenModal}>\n              <AddUserIcon />\n              New Contact\n            </Button>\n          </FilterWrapper>\n        </ContactNavWrapper>\n        {isLoading && !error && <b>Request in progress</b>}\n        <ContactList />\n      </Section>\n      {isShowModalAddUser && (\n        <Modal\n          children={\n            <Section title=\"Add New Contact\">\n              <ContactForm onCloseModal={handleOpenModal} />\n            </Section>\n          }\n          onCloseModal={handleOpenModal}\n        ></Modal>\n      )}\n    </ContentPageContainer>\n  );\n};\n\nexport default Contacts;\n","import styled from '@emotion/styled';\n\nexport const SectionContainer = styled.section`\n  margin: auto;\n  padding: 26px 0;\n\n  background-color: #f9f9f9;\n`;\n\nexport const Title = styled.h2`\n  font-weight: 700;\n  font-size: 34px;\n\n  text-align: center;\n  margin: 0;\n`;\n","import PropTypes from 'prop-types';\n\nimport { SectionContainer, Title } from './Section.module';\n\nexport const Section = ({ title, children }) => {\n  return (\n    <SectionContainer>\n      {title && <Title>{title}</Title>}\n      {children}\n    </SectionContainer>\n  );\n};\n\nSection.propTypes = {\n  title: PropTypes.string,\n  children: PropTypes.node,\n};\n"],"names":["selectContactsList","state","contacts","items","selectIsLoading","isLoading","selectError","error","selectContactsFilter","filters","AddUserIcon","styled","FaUserPlus","_templateObject","_taggedTemplateLiteral","Form","form","_templateObject2","Label","label","_templateObject3","Input","input","_templateObject4","Button","button","_templateObject5","ContactForm","_ref","onCloseModal","dispatch","useDispatch","useSelector","_jsxs","onSubmit","e","preventDefault","target","formName","elements","name","value","formNumber","number","some","_ref2","alert","concat","_ref3","addContact","toString","unwrap","then","originalPromiseResult","Notify","success","catch","failure","reset","autoComplete","children","_jsx","type","pattern","title","required","placeholder","Filter","filter","onChange","normalizedValue","currentTarget","toLowerCase","trim","setContactsFilter","UserIcon","FaUser","PhoneIcon","FaPhoneAlt","UserDeletedIcon","FaUserMinus","ContactItem","li","ContactName","p","ContactNumber","_templateObject6","_templateObject7","ContactsListItem","id","onClick","userId","deleteContact","ContactsList","ul","ContactList","visibleContacts","_toConsumableArray","contact","includes","map","ContentPageContainer","div","ContactNavWrapper","Title","h2","FilterWrapper","_templateObject8","_templateObject9","Overlay","ModalContent","Modal","useEffect","handleKeydown","code","window","addEventListener","removeEventListener","_useState","useState","_useState2","_slicedToArray","isShowModalAddUser","setIsShowModalAddUser","fetchContacts","handleOpenModal","prev","Section","SectionContainer","section"],"sourceRoot":""}